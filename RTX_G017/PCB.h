#include "MsgEnvQ.h"
#include <setjmp.h>

#ifndef _PCB_H
#define _PCB_H

//////////////////////////////////////////////////////////////////////////////////////////

class PCB
{
	int state;
	int pid;
	int priority;
	int atomicCount;
	MsgEnvQ msgEnvQueue;
	
	public:
	
		jmp_buf context;
		long *stack;
		void (*start)();
	
		PCB(void);
		~PCB(void);
		
		int getState(void);
		int getPID(void);
		int getPriority(void);
		int getAtomicCount(void);
		MsgEnvQ *getMessageEnvQueue(void);
		
		void setState(int);
		void setPID(int);
		void setPriority(int);
		void setAtomicCount(int);
		
		void incrAtomicCount(void);
		void decrAtomicCount(void);
};

#endif

//////////////////////////////////////////////////////////////////////////////////////////

PCB::PCB (void) { }

//////////////////////////////////////////////////////////////////////////////////////////

PCB::~PCB (void) { }

//////////////////////////////////////////////////////////////////////////////////////////

int PCB::getState (void){
	return state; }

//////////////////////////////////////////////////////////////////////////////////////////

int PCB::getPID (void){
	return pid; }

//////////////////////////////////////////////////////////////////////////////////////////

int PCB::getPriority (void){
	return priority; }

//////////////////////////////////////////////////////////////////////////////////////////

int PCB::getAtomicCount (void){
	return atomicCount; }

//////////////////////////////////////////////////////////////////////////////////////////

MsgEnvQ *PCB::getMessageEnvQueue (void){
	return &msgEnvQueue; }

//////////////////////////////////////////////////////////////////////////////////////////

void PCB::setState (int s){
	state = s; }

//////////////////////////////////////////////////////////////////////////////////////////
	
void PCB::setPID (int p){
	pid = p; }

//////////////////////////////////////////////////////////////////////////////////////////
	
void PCB::setPriority (int p){
	priority = p; }

//////////////////////////////////////////////////////////////////////////////////////////
	
void PCB::incrAtomicCount (void){
	atomicCount++;}
		
//////////////////////////////////////////////////////////////////////////////////////////

void PCB::decrAtomicCount (void){
	atomicCount--;}

//////////////////////////////////////////////////////////////////////////////////////////

void PCB::setAtomicCount (int c){
   atomicCount = c;}

//////////////////////////////////////////////////////////////////////////////////////////